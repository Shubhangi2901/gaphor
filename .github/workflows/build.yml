name: Build

on:
  pull_request:
  push:
    branches:
      - master
      - where-does-windows-break

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: set PY
        run: echo "::set-env name=PY::$(python --version --version | sha256sum | cut -d' ' -f1)"
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Lint with Pre-commit
        uses: pre-commit/action@v1.0.0
      - name: Lint with Flake8
        run: |
          # flake8 pre-commit hook is causing errors
          # try again once new version of pyflakes is released (> 2.1.1)
          pip install git+https://github.com/PyCQA/pyflakes.git@1911c203a13826d2eb03d582d60874b91e36f4fc --upgrade
          pip install flake8==3.7.9
          flake8 gaphor

  test-linux:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Use Python Dependency Cache
        uses: actions/cache@v1.0.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Ubuntu dependencies
        run: >
          sudo apt-get update -q && sudo apt-get install
          --no-install-recommends -y xvfb python3-dev python3-gi
          python3-gi-cairo gir1.2-gtk-3.0 libgirepository1.0-dev libcairo2-dev
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          version: 1.0.2
      - name: Install Python Dependencies
        run: poetry install
      - name: Test with Pytest
        run: xvfb-run pytest --cov=gaphor/
      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@v2.3.0
        env:
          CC_TEST_REPORTER_ID: 05f6288b94a87daa172d3e96a33ec331a4374be7d01eb9a42b3b21c4c550a8ff
        with:
          coverageCommand: coverage xml
  test-windows:
    needs: lint
    runs-on: windows-latest
    env:
      MSYSTEM: MINGW64
      MSYS2_ARCH: x86_64
    steps:
      - uses: actions/checkout@v1
      - name: Install MSYS2
        run: |
          choco install --no-progress msys2 --params="/NoUpdate /NoPath"
      - name: Update MSYS2
        run: |
          $env:PATH = "C:\tools\msys64\usr\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem"
          C:\tools\msys64\usr\bin\pacman --noconfirm -Syyuu
          C:\tools\msys64\usr\bin\pacman --noconfirm -Syuu
      - name: Use Python Dependency Cache
        uses: actions/cache@v1.0.3
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Dependencies
        run: |
          $env:PATH = "C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem"
          C:\tools\msys64\usr\bin\bash -lc "win-installer/msys2-install.sh"
        env:
          CHERE_INVOKING: yes
      - name: Run Tests
        run: |
          $env:PATH = "C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem"
          C:\tools\msys64\usr\bin\bash -lc "win-installer/msys2-test.sh"
        env:
          CHERE_INVOKING: yes
          PY_IGNORE_IMPORTMISMATCH: yes
  test-macos:
    needs: lint
    runs-on: macOS-latest
    env:
      PKG_CONFIG_PATH: /usr/local/Cellar/libffi/3.2.1/lib/pkgconfig:${PKG_CONFIG_PATH:-}
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install macOS Dependencies
        run: brew install gobject-introspection gtk+3 adwaita-icon-theme
      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          version: 1.0.2
      - name: Use Python Dependency Cache
        uses: actions/cache@v1.0.3
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Python Dependencies
        run: |
          poetry install
          pip install pytest-xvfb
      - name: Test with Pytest
        run: pytest
